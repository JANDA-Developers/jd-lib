@import "../abstracts/mixins";
// 아래 클래스 아래의
// 콘테이너와 섹션 구격을 무너뜨립니다.
// 다른 페이지를 통째로 가져올때 유용합니다.
.JDsectionDistroy {
  .docs-section {
    padding: 0 !important;
  }
  .container {
    max-width: none !important;
  }
}

// 가운데 정렬
// .JDflex {

//   &--end {
//     justify-content: flex-end;
//   }

//   &--center {
//     display: flex;
//     align-items: center;
//     justify-content: center;
//   }
//   &--between {
//     display: flex;
//     justify-content: space-between;
//   }

//   &--spaceAround {
//     display: flex;
//     justify-content: space-around;
//   }
//   &--wrap {
//     flex-wrap: wrap;
//   }

//   &--column {
//     display: flex;
//     flex-direction: column;
//   }
//   &--center {
//     display: flex;
//     justify-content: center;
//   }
//   &--grow {
//     & > div {
//       flex: 1 1;
//     }
//   }

//   &--vCenter {
//     display: flex;
//     line-height: 1;
//     align-items: center;
//   }
//   &--oneone {
//     & > div {
//       flex: 1 1;
//     }
//   }
// }

// 규격정의 ------------ 디프리 될겁니다.
.JDstandard {
  &-superTiny-mb {
    margin-bottom: $standard-superTiny-space !important;
  }
  &-tiny-mb {
    margin-bottom: $standard-tiny-space !important;
  }
  &-small-mb {
    margin-bottom: $standard-small-space !important;
  }
  &-margin-bottom {
    margin-bottom: $standard-margin-bottom !important;
  }
  &-bottom-minus {
    margin-bottom: -$standard-margin-bottom !important;
  }

  &-large-mb {
    margin-bottom: $standard-large-space !important;
  }

  &-huge-mb {
    margin-bottom: $standard-huge-space !important;
  }
  &-largest-mb {
    margin-bottom: $standard-largest-space !important;
  }
  &-mb0 {
    margin-bottom: 0 !important;
  }

  &-huge-space {
    margin-right: $standard-huge-space !important;
  }
  &-space {
    margin-right: $standard-space !important;
  }
  &-space0 {
    margin-right: 0px !important;
  }
  &-large-space {
    margin-right: $standard-large-space !important;
  }
  &-small-space {
    margin-right: $standard-small-space !important;
  }
  &-tiny-space {
    margin-right: $standard-tiny-space !important;
  }
  &-superTiny-space {
    margin-right: $standard-superTiny-space !important;
  }
}

.section {
  margin-bottom: $standard-largest-space;
}

// ✏️ text
.JDtext-align {
  &--center {
    text-align: center;
  }
  &--left {
    text-align: left;
  }
  &--right {
    text-align: right;
  }

  // DEFRECATED
  &-center {
    text-align: center;
  }
  &-left {
    text-align: left;
  }
  &-right {
    text-align: right;
  }
}
// size
.JDtext-size {
  &-h1 {
    @extend %h1;
  }
  &-h2 {
    @extend %h2;
  }
  &-h3 {
    @extend %h3;
  }
  &-h4 {
    @extend %h4;
  }
  &-h5 {
    @extend %h5;
  }
  &-h6 {
    @extend %h6;
  }
  &-large {
    font-size: $typho-huge;
  }
  &-normal {
    font-size: $typho-normal;
  }
  &-small {
    font-size: $typho-small;
  }
  &-tiny {
    font-size: $typho-tiny;
  }
  &-superTiny {
    font-size: $typho-superTiny;
  }
}

html {
  .JDbgColor {
    &--darkPrimary {
      color: $primary-color-dark-on;
      background-color: $primary-color-dark;
      &.JDhover:hover {
        background-color: $primary-color;
      }
    }

    &--primary {
      color: $primary-color-on;
      background-color: $primary-color;
      &.JDhover:hover {
        background-color: $primary-color-dark;
      }
    }

    &--darkPoint {
      color: $point-color-on;
      background-color: $point-color-dark;
      &.JDhover:hover {
        background-color: $point-color;
      }
    }

    &--point {
      color: $point-color-on;
      background-color: $point-color;
      &.JDhover:hover {
        background-color: $point-color-dark;
      }
    }

    &--black {
      color: white;
      background-color: $html-color;

      &.JDhover:hover {
        background-color: $grey-level5;
      }
    }

    &--white {
      color: $html-color;
      background-color: white;

      &.JDhover:hover {
        background-color: $grey-level1;
      }
    }

    &--new {
      color: $new-color-on;
      background-color: $new-color;
      &.JDhover:hover {
        background-color: $new-color-dark;
      }
    }

    &--error {
      color: $error-color-on;
      background-color: $error-color;
      &.JDhover:hover {
        background-color: $error-color-dark;
      }
    }

    &--positive {
      color: $positive-color-on;
      background-color: $positive-color;
      &.JDhover:hover {
        color: $positive-color-on;
        background-color: $positive-color-dark;
      }
    }

    &--warn {
      color: $orange-color-on;
      background-color: $orange-color;
      &.JDhover:hover {
        background-color: $orange-color-dark;
      }
    }

    &--grey1 {
      color: $grey-level1-on;
      background-color: $grey-level1;
    }

    &--grey2 {
      color: $grey-level2-on;
      background-color: $grey-level2;
    }
    &--grey3 {
      color: $grey-level3-on;
      background-color: $grey-level3;
    }

    &--grey4 {
      color: $grey-level4-on;
      background-color: $grey-level4;
    }
    &--grey5 {
      color: $grey-level5-on;
      background-color: $grey-level5;
    }

    &--blue {
      background-color: $blue-color;
      &.JDhover:hover {
        background-color: $blue-color-dark;
      }
    }
  }
}

html {
  .JDtextColor {
    &--warn {
      color: $orange-color;
      &.JDhover:hover {
        color: $orange-color-dark;
      }
    }
    &--primary {
      color: $primary-color;
      &.JDhover:hover {
        color: $primary-color-dark;
      }
    }
    &--error {
      color: $error-color;
      &.JDhover:hover {
        color: $error-color-dark;
      }
    }
    &--point {
      color: $point-color;
      &.JDhover:hover {
        color: $point-color-dark;
      }
    }
    &--placeHolder {
      color: $grey-level1;
      &.JDhover:hover {
        color: $grey-level2;
      }
    }
    &--grey5 {
      color: $grey-level5;
      &.JDhover:hover {
        color: $grey-level4;
      }
    }
    &--grey4 {
      color: $grey-level4;
      &.JDhover:hover {
        color: $grey-level3;
      }
    }
    &--grey3 {
      color: $grey-level3;
      &.JDhover:hover {
        color: $grey-level4;
      }
    }
    &--grey2 {
      color: $grey-level2;
      &.JDhover:hover {
        color: $grey-level3;
      }
    }
    &--grey1 {
      color: $grey-level1;
      &.JDhover:hover {
        color: $grey-level2;
      }
    }
    &--third {
      color: $third-color;
      &.JDhover:hover {
        color: $third-color-dark;
      }
    }
    &--white {
      color: white;
      &.JDhover:hover {
        color: $grey-level0;
      }
    }
  }
}

// z-index -----------
.JDz-index {
  &-1 {
    position: relative;
    z-index: $z-index-1 !important;
  }
  &-2 {
    position: relative;
    z-index: $z-index-2 !important;
  }
  &-3 {
    position: relative;
    z-index: $z-index-3 !important;
  }
  &-4 {
    position: relative;
    z-index: $z-index-4 !important;
  }
  &-5 {
    position: relative;
    z-index: $z-index-5 !important;
  }
  &-6 {
    position: relative;
    z-index: $z-index-6 !important;
  }
  &-7 {
    position: relative;
    z-index: $z-index-7 !important;
  }
  &-8 {
    position: relative;
    z-index: $z-index-8;
  }
  &-9 {
    position: relative;
    z-index: $z-index-9;
  }
  &-10 {
    position: relative;
    z-index: $z-index-10;
  }
}

.visibility-none {
  visibility: none !important;
}

// .JDdisplay-none--(이것일때)
.JDdisplay-none {
  display: none !important;
  // Up 클래스
  @include responseUpClass() {
    display: none !important;
  }
  // Down클래스
  @include responseClass() {
    display: none !important;
  }
}

// 호버 했을때만 나타나는 박스
.JDhoverBox {
  &:not(:hover) .JDhoverBox__ {
    display: none;
  }
}

// 우선 순위 보정
#root,
.ReactModalPortal {
  .JDmargin-bottom0 {
    margin-bottom: 0 !important;
    @include responseUpClass() {
      margin-bottom: 0 !important;
    }
  }
  .JDstandard-margin0 {
    margin: 0 !important;
  }
  // 반응형 클래스
  .JDstandard-margin-bottom {
    @include responseClass() {
      margin-bottom: $standard-margin-bottom;
    }
  }
}

// 기타
.JDtypho-deco--bar {
  border-left: 4px solid $primary-color;
  padding-left: $standard-small-space;
}

.clear-fix:after {
  content: "";
  display: block;
  clear: both;
}

[hidden] {
  display: none !important;
}

// else
.JDnoWrap {
  white-space: nowrap;
}

.JDwaves-effect {
  position: relative;
  cursor: pointer;
  display: inline-block;
  overflow: hidden;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  // white-space: nowrap;
  // outline: 0;

  vertical-align: middle;
  // cursor: pointer;
  // border: none;
  // outline: none;
  // color: inherit;
  // background-color: rgba(0, 0, 0, 0);
  // font-size: 1em;
  // line-height:1em;
  // text-align: center;
  // text-decoration: none;
  z-index: 1;
  will-change: opacity, transform;
  transition: background-color 0.3s ease-out;

  .JDwaves-effect__ripple {
    position: absolute;
    border-radius: 50%;
    width: 20px;
    height: 20px;
    margin-top: -10px;
    margin-left: -10px;
    opacity: 0;
    background-color: rgba(255, 255, 255, 0.45);

    // $gradient: rgba(0,0,0,0.2) 0,rgba(0,0,0,.3) 40%,rgba(0,0,0,.4) 50%,rgba(0,0,0,.5) 60%,rgba(255,255,255,0) 70%;
    // background: -webkit-radial-gradient($gradient);
    // background: -o-radial-gradient($gradient);
    // background: -moz-radial-gradient($gradient);
    // background: radial-gradient($gradient);
    transition: all 0.7s ease-out;
    transition-property: transform, opacity;
    transform: scale(0);
    pointer-events: none;
  }

  // Waves Colors
  // TODO : need Two Hyphen
  &-dark .JDwaves-effect__ripple {
    background: rgba(0, 0, 0, 0.2) !important;
  }

  //필요하면 이렇게 색상을 만드세요.
  // &--red .JDwaves-effect__ripple {
  //     background-color: rgba(244, 67, 54, .70);
  // }

  // Style input button bug.
  input[type="button"],
  input[type="reset"],
  input[type="submit"] {
    border: 0;
    font-style: normal;
    font-size: inherit;
    text-transform: inherit;
    background: none;
  }
}

.waves-notransition {
  transition: none #{"!important"};
}

// .waves-button,
// .waves-button:hover,
// .waves-button:visited,
// .waves-button-input {
//     white-space: nowrap;
//     vertical-align: middle;
//     cursor: pointer;
//     border: none;
//     outline: none;
//     color: inherit;
//     background-color: rgba(0, 0, 0, 0);
//     font-size: 1em;
//     line-height:1em;
//     text-align: center;
//     text-decoration: none;
//     z-index: 1;
// }

// .waves-button {
//     padding: 0.85em 1.1em;
//     border-radius: 0.2em;
// }

// .waves-button-input {
//     margin: 0;
//     padding: 0.85em 1.1em;
// }

.waves-input-wrapper {
  border-radius: 0.2em;
  vertical-align: bottom;

  // &.waves-button {
  //     padding: 0;
  // }

  .waves-button-input {
    position: relative;
    top: 0;
    left: 0;
    z-index: 1;
  }
}

// .waves-float {
// -webkit-mask-image: none;
// @include box-shadow(0px 1px 1.5px 1px rgba(0, 0, 0, 0.12));

// &:active {
// @include box-shadow(0px 8px 20px 1px rgba(0, 0, 0, 0.30));
//     }
// }

.waves-block {
  display: block;
}

/* Firefox Bug: link not triggered */
a.JDwaves-effect .JDwaves-effect__ripple {
  z-index: -1;
}
